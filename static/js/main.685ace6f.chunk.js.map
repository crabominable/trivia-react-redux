{"version":3,"sources":["services/fetchAnswers.js","pages/Login.js","actions/index.js","actions/actionTypes.js","components/Header.js","components/GameScreen.js","components/ListPlayerRanking.js","pages/Game.js","pages/Feedback.js","pages/Ranking.js","App.js","reducers/login.js","reducers/game.js","reducers/index.js","store/index.js","index.js"],"names":["FetchAPI","fetch","localStorage","getItem","then","response","json","ok","Promise","resolve","reject","Login","state","email","name","valid","validLogin","bind","handleForm","requestToken","handleHash","this","props","getAPI","sendFormLogin","player","document","getElementById","value","assertions","score","gravatarEmail","ranking","JSON","parse","setItem","stringify","returnedPromise","returnedJson","token","target","setState","isValidEmail","match","isValidName","length","encryptado","md5","toString","className","htmlFor","id","type","data-testid","onChange","placeholder","to","pathname","onClick","disabled","React","Component","connect","dispatch","payload","FetchingSUCESS","ActionEmail","Header","point","timer","src","alt","game","user","answers","answer","loading","isLoading","GameScreen","indexQuestion","isCorrect","isIncorrect","renderGame","handleBotao","handleClick","setTimer","nextAnswers","mudarState","handleClickQuestion","renderButtonWithLink","renderButtonWithoutLink","savePlayerRanking","newPlayer","param","pergunta","setPoint","answerDifficulty","difficulty","easy","medium","hard","TIMER","setInterval","reduxTimer","question","clearInterval","Array","from","getElementsByClassName","forEach","item","parseFloat","prevState","index","key","setScore","newPlayerRank","picture","newRankig","category","correct_answer","incorrect_answers","map","PointSet","ListPlayerRanking","data","Game","location","setAnswer","Feedback","handleFeedback","handleRanking","handlePlayAgain","handleButtRanking","reset","Ranking","sort","a","b","App","basename","process","path","component","exact","INITIAL_STATE","action","INITIAL_API_STATE","erro","Fetching","results","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render"],"mappings":"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","file":"static/js/main.685ace6f.chunk.js","sourcesContent":["const FetchAPI = () => (\n  fetch(`https://opentdb.com/api.php?amount=5&token=${localStorage.getItem('token')}`)\n    .then((response) => (\n      response\n        .json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ))\n);\n\nexport default FetchAPI;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './Login.css';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { ActionEmail, FecthAPI } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      valid: false,\n    };\n    this.validLogin = this.validLogin.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n    this.requestToken = this.requestToken.bind(this);\n    this.handleHash = this.handleHash.bind(this);\n  }\n\n  async requestToken() {\n    const { getAPI, sendFormLogin } = this.props;\n    const { email, name } = this.state;\n    sendFormLogin(email, name);\n    const state = {\n      player: {\n        name: document.getElementById('name').value,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: document.getElementById('email').value,\n      },\n      ranking: localStorage.getItem('state') !== null\n        ? JSON.parse(localStorage.getItem('state')).ranking\n        : [],\n    };\n    localStorage.setItem('state', JSON.stringify(state));\n    this.handleHash();\n    const returnedPromise = await\n    fetch('https://opentdb.com/api_token.php?command=request');\n    const returnedJson = await returnedPromise.json();\n    localStorage.setItem('token', returnedJson.token);\n    getAPI();\n  }\n\n  handleForm({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n    this.validLogin();\n  }\n\n  validLogin() {\n    const { email, name } = this.state;\n    const REGEX_EMAIL = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n    const REGEX_NAME = 1;\n    const isValidEmail = email.match(REGEX_EMAIL) !== null;\n    const isValidName = name.length >= REGEX_NAME;\n    if (isValidEmail === true && isValidName === true) {\n      this.setState({\n        valid: true,\n      });\n    }\n  }\n\n  handleHash() {\n    const { email } = this.state;\n    const encryptado = md5(email).toString();\n    localStorage.setItem('hash', encryptado);\n  }\n\n  render() {\n    const { valid, name } = this.state;\n    return (\n      <div className=\"container-main-login\">\n        <div className=\"login-screen\">\n          <div className=\"login-title\">\n            <h1>Trivia Time!</h1>\n          </div>\n          <div className=\"login-panel\">\n            <label className=\"label-login-content\" htmlFor=\"email\">\n              <input\n                className=\"input-login-size\"\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                data-testid=\"input-gravatar-email\"\n                onChange={ this.handleForm }\n                placeholder=\"Seu email:\"\n              />\n            </label>\n            <label className=\"label-login-content\" htmlFor=\"password\">\n              <input\n                className=\"input-login-size\"\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                data-testid=\"input-player-name\"\n                onChange={ this.handleForm }\n                placeholder=\"Seu nome:\"\n              />\n            </label>\n            <Link className=\"config-button-login2\" to={ { pathname: '/game', state: { name } } }>\n              {valid ? <input\n                type=\"Button\"\n                onClick={ this.requestToken }\n                value=\"Jogar\"\n                data-testid=\"btn-play\"\n                className=\"btn-login-screen play\"\n              />\n                : <input type=\"Button\" value=\"Jogar\" data-testid=\"btn-play\" disabled />}\n            </Link>\n            {/* <Link className=\"config-button-login\" to=\"/settings\">\n              <input\n                type=\"Button\"\n                defaultValue=\"Configuracao\"\n                className=\"btn-login-screen\"\n                data-testid=\"btn-settings\"\n              />\n              </Link> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAPI: () => dispatch(FecthAPI()),\n  sendFormLogin: (email, name) => dispatch(ActionEmail(email, name)),\n});\n\nLogin.propTypes = {\n  getAPI: PropTypes.func.isRequired,\n  sendFormLogin: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import FetchAPI from '../services/fetchAnswers';\nimport {\n  getUser,\n  fetchAPI,\n  fetchAPIERROR,\n  fetchAPISUCESS,\n  SET_TIMER,\n  SET_POINT,\n  RESET,\n} from './actionTypes';\n\nexport const ActionEmail = (email, name) => ({\n  type: getUser,\n  email,\n  name,\n});\n\nexport const Fetching = () => ({\n  type: fetchAPI,\n});\n\nexport const FetchingSUCESS = (payload) => ({\n  type: fetchAPISUCESS,\n  payload,\n});\n\nexport const FetchingERROR = () => ({\n  type: fetchAPIERROR,\n});\n\nexport const FecthAPI = () => (dispatch) => {\n  dispatch(Fetching());\n  return FetchAPI()\n    .then(\n      (payload) => dispatch(FetchingSUCESS(payload)),\n      () => dispatch(fetchAPIERROR()),\n    );\n};\n\nexport const setTimer = (timer, answer) => ({\n  type: SET_TIMER,\n  timer,\n  answer,\n});\n\nexport const PointSet = (point) => ({\n  type: SET_POINT,\n  point,\n});\n\nexport const resetStore = () => ({\n  type: RESET,\n});\n","// Coloque aqui suas actions\nexport const getUser = 'GET_USER';\nexport const validEmail = 'VALID_EMAIL';\nexport const fetchAPISUCESS = 'FETCH_API_SUCESS';\nexport const fetchAPIERROR = 'FETCH_API_ERROR';\nexport const fetchAPI = 'fetchAPI';\nexport const SET_TIMER = 'SET_TIMER';\nexport const SET_POINT = 'SET_POINT';\nexport const RESET = 'RESET';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    const { name, point, timer } = this.props;\n    return (\n      <div className=\"header-main-container\">\n        <div className=\"header\">\n          <div className=\"header-logos\">\n            <img\n              src=\"https://i.pinimg.com/originals/89/74/82/897482d89aa1a4b266a7ee8b0dbd8f8e.gif\"\n              alt=\"pixel art asas batendo\"\n              className=\"header-wings\"\n            />\n            <span className=\"header-game-title\">\n              Trivia\n            </span>\n          </div>\n          <div className=\"header-infos\">\n            <span\n              data-testid=\"header-player-name\"\n              className=\"header-text\"\n            >\n              {`Nome: ${name}`}\n            </span>\n            <div className=\"timer\">\n              {`Tempo: ${timer}`}\n            </div>\n            <span\n              className=\"header-text\"\n              data-testid=\"header-score\"\n            >\n              {`Pontuação: ${point}`}\n            </span>\n          </div>\n          <div className=\"header-logos\">\n            <span className=\"header-game-title\">\n              Time!\n            </span>\n            <img\n              src=\"https://i.pinimg.com/originals/81/d5/4a/81d54a65efdeba6a87f20229861da00e.gif\"\n              alt=\"pixel art asas batendo\"\n              className=\"header-wings\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  name: PropTypes.string,\n  answer: PropTypes.shape({\n    answer: PropTypes.shape({}) }),\n}.isRequired;\n\nconst mapStateToProps = ({ game, user }) => ({\n  answers: game.answer,\n  loading: game.isLoading,\n  name: user.name,\n  timer: game.timer,\n  point: game.point,\n});\n\nexport default connect(mapStateToProps, null)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setTimer, PointSet } from '../actions';\nimport './GameScreen.css';\n\nclass GameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    const state = localStorage.getItem('state');\n    this.state = {\n      indexQuestion: 0,\n      isCorrect: '',\n      isIncorrect: '',\n      player: JSON.parse(state),\n    };\n    this.renderGame = this.renderGame.bind(this);\n    this.handleBotao = this.handleBotao.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n    this.nextAnswers = this.nextAnswers.bind(this);\n    this.setState = this.setState.bind(this);\n    this.mudarState = this.mudarState.bind(this);\n    this.handleClickQuestion = this.handleClickQuestion.bind(this);\n    this.renderButtonWithLink = this.renderButtonWithLink.bind(this);\n    this.renderButtonWithoutLink = this.renderButtonWithoutLink.bind(this);\n    this.savePlayerRanking = this.savePlayerRanking.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTimer();\n  }\n\n  componentDidUpdate() {\n    const state = localStorage.getItem('state');\n    const { point } = this.props;\n    const newPlayer = {\n      ...JSON.parse(state),\n      player: {\n        ...JSON.parse(state).player,\n        score: point,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(newPlayer));\n  }\n\n  setScore(param) {\n    const { timer, pergunta, setPoint } = this.props;\n    const { indexQuestion } = this.state;\n    const POINTS_CORRECT_ANSWER = 10;\n    const answerDifficulty = pergunta[indexQuestion].difficulty;\n    const arryDifficulty = { easy: 1, medium: 2, hard: 3 };\n    setPoint(param === 'correct'\n      ? POINTS_CORRECT_ANSWER + (timer * arryDifficulty[answerDifficulty]) : 0);\n    this.mudarState();\n  }\n\n  setTimer() {\n    const ONE_SECOND = 1000;\n    const TIMER = setInterval(() => {\n      const { loading, reduxTimer, question, timer } = this.props;\n      if (timer <= 0 || question === true) {\n        clearInterval(TIMER);\n        reduxTimer(timer, question);\n        Array.from(document.getElementsByClassName('botao'))\n          .forEach((item) => { item.disabled = true; });\n      } else if (loading === false) {\n        const newTimer = parseFloat(timer) - 1;\n        reduxTimer(newTimer, question);\n      }\n    }, ONE_SECOND);\n  }\n\n  mudarState() {\n    const { point } = this.props;\n    this.setState((prevState) => ({\n      ...prevState,\n      player: parseFloat(prevState.player.point) + point,\n    }));\n  }\n\n  handleBotao(item, index) {\n    const { isIncorrect } = this.state;\n    return (\n      <button\n        data-testid={`wrong-answer-${index}`}\n        className={`${isIncorrect} botao`}\n        type=\"button\"\n        value=\"incorrect\"\n        key={index}\n        onClick={this.handleClick}\n      >\n        {item}\n      </button>);\n  }\n\n  handleClick({ target: { value } }) {\n    const state = localStorage.getItem('state');\n    const { reduxTimer, timer } = this.props;\n    if (value === 'correct') {\n      this.setState({ isCorrect: value, isIncorrect: 'incorrect' });\n      this.setScore('correct');\n      const newPlayer = {\n        ...JSON.parse(state),\n        player: {\n          ...JSON.parse(state).player,\n          assertions: JSON.parse(state).player.assertions + 1,\n        },\n      };\n      localStorage.setItem('state', JSON.stringify(newPlayer));\n    } else if (value === 'incorrect') {\n      this.setState({ isCorrect: 'correct', isIncorrect: value });\n      this.setScore('incorrect');\n    }\n    reduxTimer(timer, true);\n  }\n\n  handleClickQuestion() {\n    const { reduxTimer } = this.props;\n    this.setState((prevState) => ({\n      indexQuestion: prevState.indexQuestion + 1,\n      isCorrect: '',\n      isIncorrect: '',\n    }));\n    Array.from(document.getElementsByClassName('botao'))\n      .forEach((item) => { item.disabled = false; });\n    const REFRESH_TIMER = 30;\n    reduxTimer(REFRESH_TIMER, false);\n    this.setTimer();\n  }\n\n  nextAnswers() {\n    const { indexQuestion } = this.state;\n    const LIMITER_QUESTION = 4;\n    return (\n      indexQuestion === LIMITER_QUESTION\n        ? this.renderButtonWithLink() : this.renderButtonWithoutLink()\n    );\n  }\n\n  savePlayerRanking() {\n    const state = localStorage.getItem('state');\n    const newPlayerRank = {\n      name: JSON.parse(state).player.name,\n      score: JSON.parse(state).player.score,\n      picture: `https://www.gravatar.com/avatar/${localStorage.getItem('hash')}`,\n    };\n    const newRankig = {\n      ...JSON.parse(state),\n      ranking: [\n        ...JSON.parse(state).ranking,\n        newPlayerRank,\n      ],\n    };\n    localStorage.setItem('state', JSON.stringify(newRankig));\n  }\n\n  renderButtonWithLink() {\n    return (\n      <Link to=\"/feedback\">\n        <button\n          type=\"button\"\n          data-testid=\"btn-next\"\n          className=\"feedback\"\n          onClick={this.savePlayerRanking}\n        >\n          Feedback\n        </button>\n      </Link>\n    );\n  }\n\n  renderButtonWithoutLink() {\n    return (\n      <button\n        type=\"button\"\n        className=\"next-question\"\n        onClick={this.handleClickQuestion}\n        data-testid=\"btn-next\"\n      >\n        Proxima Pergunta\n      </button>\n    );\n  }\n\n  renderGame() {\n    const { pergunta, question } = this.props;\n    const { indexQuestion, isCorrect } = this.state;\n    return (\n      <div className=\"game-content\">\n        <h1 data-testid=\"question-category\" className=\"question\">\n          {`Category: ${pergunta[indexQuestion].category}`}\n        </h1>\n        <h1 className=\"question\" data-testid=\"question-text\">\n          {pergunta[indexQuestion].question}\n        </h1>\n        <img className=\"bat\" src=\"https://thumbs.gfycat.com/ActiveCheerfulBarnacle-max-1mb.gif\" alt=\"curious bat\" />\n        <div className=\"game-content buttons\">\n          <button\n            type=\"button\"\n            className={`${isCorrect} botao`}\n            data-testid=\"correct-answer\"\n            value=\"correct\"\n            onClick={this.handleClick}\n          >\n            {pergunta[indexQuestion].correct_answer}\n          </button>\n          {pergunta[indexQuestion].incorrect_answers.map(\n            (item, index) => this.handleBotao(item, index),\n          )}\n          {question === true ? this.nextAnswers() : null}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { answer: { isLoading } } = this.props;\n    return (\n      isLoading === true\n        ? <div className=\"loading\">Loading...</div>\n        : this.renderGame()\n    );\n  }\n}\n\nGameScreen.propTypes = {\n  answer: PropTypes.shape({ isLoading: PropTypes.bool, answer: PropTypes.shape({}) }),\n  reduxTimer: PropTypes.func,\n  timer: PropTypes.number,\n  question: PropTypes.bool,\n  loading: PropTypes.bool,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  loading: state.game.isLoading,\n  answer: state.game,\n  timer: state.game.timer,\n  question: state.game.question,\n  pergunta: state.game.answer,\n  point: state.game.point,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reduxTimer: (timer, answer) => dispatch(setTimer(timer, answer)),\n  setPoint: (point) => dispatch(PointSet(point)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameScreen);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListPlayerRanking extends React.Component {\n  render() {\n    const { data: { name, score, picture } } = this.props;\n    return (\n      <div className=\"ranking-content-items\">\n        <img\n          alt=\"img-profile\"\n          src={ picture }\n        />\n        <span data-testid={ `player-name-${name}` }>{name}</span>\n        <span data-testid={ `player-score-${score}` }>{`Score: ${score}`}</span>\n      </div>\n    );\n  }\n}\n\nListPlayerRanking.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    score: PropTypes.number,\n    picture: PropTypes.string,\n  }),\n}.isRequired;\n\nexport default ListPlayerRanking;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Header, GameScreen } from '../components';\nimport './Game.css';\n\nclass Game extends React.Component {\n  render() {\n    const { location: { state: { name } } } = this.props;\n    return (\n      <div className=\"game-screen-content\">\n        <Header name={ name } />\n        <GameScreen onClick={ this.setAnswer } />\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      name: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ game }) => ({\n  loading: game.isLoading,\n  question: game.question,\n});\n\nexport default connect(mapStateToProps, null)(Game);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Header } from '../components';\nimport { resetStore } from '../actions';\nimport './Feedback.css';\n\nclass Feedback extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFeedback = this.handleFeedback.bind(this);\n    this.handleRanking = this.handleRanking.bind(this);\n    this.handlePlayAgain = this.handlePlayAgain.bind(this);\n    this.handleButtRanking = this.handleButtRanking.bind(this);\n  }\n\n  handleFeedback() {\n    const state = localStorage.getItem('state');\n    const THREE = 3;\n    if (JSON.parse(state).player.assertions < THREE) {\n      return (\n        <h1 data-testid=\"feedback-text\" className=\"feedback-text\">Podia ser melhor...</h1>\n      );\n    }\n    if (JSON.parse(state).player.assertions >= THREE) {\n      return (\n        <h1 data-testid=\"feedback-text\" className=\"feedback-text\">Mandou bem!</h1>\n      );\n    }\n  }\n\n  handleRanking() {\n    const state = localStorage.getItem('state');\n    return (\n      <>\n        <h1\n          className=\"feedback-score\"\n          data-testid=\"feedback-total-score\"\n        >\n          {JSON.parse(state).player.score}\n        </h1>\n        <h1\n          data-testid=\"feedback-total-question\"\n          className=\"feedback-score\"\n        >\n          {JSON.parse(state).player.assertions}\n        </h1>\n      </>\n    );\n  }\n\n  handlePlayAgain() {\n    const { reset } = this.props;\n    return (\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n          onClick={ () => reset() }\n        >\n          Jogar Novamente\n        </button>\n      </Link>\n    );\n  }\n\n  handleButtRanking() {\n    return (\n      <Link to=\"/ranking\">\n        <button type=\"button\" data-testid=\"btn-ranking\">Ranking</button>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"feedback-content\">\n          { this.handleFeedback() }\n          { this.handleRanking() }\n          <img\n            src=\"https://upload.wikimedia.org/wikipedia/commons/5/5e/Worthy_artistic_new_year_fireworks_.gif\"\n            alt=\"fireworks\"\n            className=\"fireworks\"\n          />\n          { this.handlePlayAgain() }\n        </div>\n      </>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  reset: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(resetStore()),\n});\n\nexport default connect(null, mapDispatchToProps)(Feedback);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { ListPlayerRanking } from '../components';\nimport { resetStore } from '../actions';\nimport './Ranking.css';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePlayAgain = this.handlePlayAgain.bind(this);\n  }\n\n  handlePlayAgain() {\n    const { reset } = this.props;\n    return (\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n          onClick={ () => reset() }\n        >\n          Jogar Novamente\n        </button>\n      </Link>\n    );\n  }\n\n  render() {\n    const state = localStorage.getItem('state');\n    return (\n      <div className=\"div-button\">\n        <div className=\"ranking-content\">\n          <div className=\"ranking-content-inside\">\n            <h1 data-testid=\"ranking-title\">RANKING</h1>\n            {JSON.parse(state).ranking\n              .sort((a, b) => b.score - a.score)\n              .map((item, index) => <ListPlayerRanking key={ index } data={ item } />)}\n          </div>\n        </div>\n        { this.handlePlayAgain() }\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  reset: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(resetStore()),\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\n// import Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/game\" component={ Game } />\n        {/* <Route path=\"/settings\" component={ Settings } /> */}\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { getUser } from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  email: '',\n  name: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case getUser:\n    return { ...state, email: action.email, name: action.name };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas aos jogos\nimport {\n  fetchAPI,\n  fetchAPIERROR,\n  fetchAPISUCESS,\n  SET_TIMER,\n  SET_POINT,\n  RESET,\n} from '../actions/actionTypes';\n\nconst INITIAL_API_STATE = {\n  isLoading: true,\n  erro: null,\n  answer: {},\n  timer: 30,\n  question: false,\n  point: 0,\n};\n\nconst Fetching = (state = INITIAL_API_STATE, action) => {\n  switch (action.type) {\n  case fetchAPI:\n    return { ...state, isLoading: true };\n\n  case fetchAPISUCESS:\n    return { ...state,\n      isLoading: false,\n      answer: action.payload.results,\n    };\n\n  case fetchAPIERROR:\n    return {\n      ...state,\n      isLoading: false,\n      erro: 'DEU RUIM',\n    };\n\n  case SET_TIMER:\n    return {\n      ...state,\n      timer: action.timer,\n      question: action.answer,\n    };\n\n  case SET_POINT:\n    return {\n      ...state,\n      point: state.point + action.point,\n    };\n\n  case RESET:\n    return {\n      isLoading: true,\n      erro: null,\n      answer: {},\n      timer: 30,\n      question: false,\n      point: 0,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default Fetching;\n","import { combineReducers } from 'redux';\nimport user from './login';\nimport game from './game';\n\nconst rootReducer = combineReducers({ user, game });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}